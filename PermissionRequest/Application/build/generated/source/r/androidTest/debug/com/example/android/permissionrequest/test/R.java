/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.example.android.permissionrequest.test;

public final class R {
  public static final class attr {
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alignBounds</td><td>0</td><td></td></tr>
     * <tr><td>alignMargins</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int alignmentMode=0x7f010000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f010001;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f010002;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f010003;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f010004;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f010005;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f010006;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int columnCount=0x7f010007;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int columnOrderPreserved=0x7f010008;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f010009;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f01000a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f01000b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f01000c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f01000d;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_column=0x7f01000e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_columnSpan=0x7f01000f;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_columnWeight=0x7f010010;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     */
    public static final int layout_gravity=0x7f010011;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_row=0x7f010012;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_rowSpan=0x7f010013;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_rowWeight=0x7f010014;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int orientation=0x7f010015;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int rowCount=0x7f010016;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int rowOrderPreserved=0x7f010017;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useDefaultMargins=0x7f010018;
  }
  public static final class color {
    public static final int cardview_dark_background=0x7f020000;
    public static final int cardview_light_background=0x7f020001;
    public static final int cardview_shadow_end_color=0x7f020002;
    public static final int cardview_shadow_start_color=0x7f020003;
  }
  public static final class dimen {
    public static final int cardview_compat_inset_shadow=0x7f030000;
    public static final int cardview_default_elevation=0x7f030001;
    public static final int cardview_default_radius=0x7f030002;
    public static final int default_gap=0x7f030003;
  }
  public static final class id {
    public static final int alignBounds=0x7f040000;
    public static final int alignMargins=0x7f040001;
    public static final int bottom=0x7f040002;
    public static final int center=0x7f040003;
    public static final int center_horizontal=0x7f040004;
    public static final int center_vertical=0x7f040005;
    public static final int clip_horizontal=0x7f040006;
    public static final int clip_vertical=0x7f040007;
    public static final int end=0x7f040008;
    public static final int fill=0x7f040009;
    public static final int fill_horizontal=0x7f04000a;
    public static final int fill_vertical=0x7f04000b;
    public static final int horizontal=0x7f04000c;
    public static final int left=0x7f04000d;
    public static final int right=0x7f04000e;
    public static final int start=0x7f04000f;
    public static final int top=0x7f040010;
    public static final int vertical=0x7f040011;
  }
  public static final class style {
    public static final int CardView=0x7f050000;
    public static final int CardView_Dark=0x7f050001;
    public static final int CardView_Light=0x7f050002;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.example.android.permissionrequest.test:cardBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.example.android.permissionrequest.test:cardCornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.example.android.permissionrequest.test:cardElevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.example.android.permissionrequest.test:cardMaxElevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.example.android.permissionrequest.test:cardPreventCornerOverlap}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.example.android.permissionrequest.test:cardUseCompatPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.example.android.permissionrequest.test:contentPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.example.android.permissionrequest.test:contentPaddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.example.android.permissionrequest.test:contentPaddingLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.example.android.permissionrequest.test:contentPaddingRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.example.android.permissionrequest.test:contentPaddingTop}</code></td><td></td></tr>
     * </table>
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
        0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004, 
        0x7f010005, 0x7f010006, 0x7f010009, 0x7f01000a, 
        0x7f01000b, 0x7f01000c, 0x7f01000d
      };
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#cardBackgroundColor}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.android.permissionrequest.test:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#cardCornerRadius}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#cardElevation}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:cardElevation
     */
    public static final int CardView_cardElevation=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#cardMaxElevation}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=3;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#cardPreventCornerOverlap}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.permissionrequest.test:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=4;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#cardUseCompatPadding}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.permissionrequest.test:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=5;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#contentPadding}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:contentPadding
     */
    public static final int CardView_contentPadding=6;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#contentPaddingBottom}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=7;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#contentPaddingLeft}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=8;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#contentPaddingRight}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=9;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#contentPaddingTop}
     * attribute's value can be found in the {@link #CardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.android.permissionrequest.test:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=10;
    /**
     * Attributes that can be used with a GridLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GridLayout_alignmentMode com.example.android.permissionrequest.test:alignmentMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_columnCount com.example.android.permissionrequest.test:columnCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_columnOrderPreserved com.example.android.permissionrequest.test:columnOrderPreserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_orientation com.example.android.permissionrequest.test:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_rowCount com.example.android.permissionrequest.test:rowCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_rowOrderPreserved com.example.android.permissionrequest.test:rowOrderPreserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_useDefaultMargins com.example.android.permissionrequest.test:useDefaultMargins}</code></td><td></td></tr>
     * </table>
     * @see #GridLayout_alignmentMode
     * @see #GridLayout_columnCount
     * @see #GridLayout_columnOrderPreserved
     * @see #GridLayout_orientation
     * @see #GridLayout_rowCount
     * @see #GridLayout_rowOrderPreserved
     * @see #GridLayout_useDefaultMargins
     */
    public static final int[] GridLayout={
        0x7f010000, 0x7f010007, 0x7f010008, 0x7f010015, 
        0x7f010016, 0x7f010017, 0x7f010018
      };
    /**
     * Attributes that can be used with a GridLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_margin android:layout_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_column com.example.android.permissionrequest.test:layout_column}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan com.example.android.permissionrequest.test:layout_columnSpan}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_columnWeight com.example.android.permissionrequest.test:layout_columnWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_gravity com.example.android.permissionrequest.test:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_row com.example.android.permissionrequest.test:layout_row}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan com.example.android.permissionrequest.test:layout_rowSpan}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_rowWeight com.example.android.permissionrequest.test:layout_rowWeight}</code></td><td></td></tr>
     * </table>
     * @see #GridLayout_Layout_android_layout_width
     * @see #GridLayout_Layout_android_layout_height
     * @see #GridLayout_Layout_android_layout_margin
     * @see #GridLayout_Layout_android_layout_marginLeft
     * @see #GridLayout_Layout_android_layout_marginTop
     * @see #GridLayout_Layout_android_layout_marginRight
     * @see #GridLayout_Layout_android_layout_marginBottom
     * @see #GridLayout_Layout_layout_column
     * @see #GridLayout_Layout_layout_columnSpan
     * @see #GridLayout_Layout_layout_columnWeight
     * @see #GridLayout_Layout_layout_gravity
     * @see #GridLayout_Layout_layout_row
     * @see #GridLayout_Layout_layout_rowSpan
     * @see #GridLayout_Layout_layout_rowWeight
     */
    public static final int[] GridLayout_Layout={
        0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7, 
        0x010100f8, 0x010100f9, 0x010100fa, 0x7f01000e, 
        0x7f01000f, 0x7f010010, 0x7f010011, 0x7f010012, 
        0x7f010013, 0x7f010014
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int GridLayout_Layout_android_layout_height=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_margin}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_margin
     */
    public static final int GridLayout_Layout_android_layout_margin=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginBottom}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int GridLayout_Layout_android_layout_marginBottom=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginLeft}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int GridLayout_Layout_android_layout_marginLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginRight}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int GridLayout_Layout_android_layout_marginRight=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_marginTop}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int GridLayout_Layout_android_layout_marginTop=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int GridLayout_Layout_android_layout_width=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#layout_column}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.android.permissionrequest.test:layout_column
     */
    public static final int GridLayout_Layout_layout_column=7;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#layout_columnSpan}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.android.permissionrequest.test:layout_columnSpan
     */
    public static final int GridLayout_Layout_layout_columnSpan=8;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#layout_columnWeight}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.example.android.permissionrequest.test:layout_columnWeight
     */
    public static final int GridLayout_Layout_layout_columnWeight=9;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name com.example.android.permissionrequest.test:layout_gravity
     */
    public static final int GridLayout_Layout_layout_gravity=10;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#layout_row}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.android.permissionrequest.test:layout_row
     */
    public static final int GridLayout_Layout_layout_row=11;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#layout_rowSpan}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.android.permissionrequest.test:layout_rowSpan
     */
    public static final int GridLayout_Layout_layout_rowSpan=12;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#layout_rowWeight}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.example.android.permissionrequest.test:layout_rowWeight
     */
    public static final int GridLayout_Layout_layout_rowWeight=13;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#alignmentMode}
     * attribute's value can be found in the {@link #GridLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alignBounds</td><td>0</td><td></td></tr>
     * <tr><td>alignMargins</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.example.android.permissionrequest.test:alignmentMode
     */
    public static final int GridLayout_alignmentMode=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#columnCount}
     * attribute's value can be found in the {@link #GridLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.android.permissionrequest.test:columnCount
     */
    public static final int GridLayout_columnCount=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#columnOrderPreserved}
     * attribute's value can be found in the {@link #GridLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.permissionrequest.test:columnOrderPreserved
     */
    public static final int GridLayout_columnOrderPreserved=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#orientation}
     * attribute's value can be found in the {@link #GridLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.example.android.permissionrequest.test:orientation
     */
    public static final int GridLayout_orientation=3;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#rowCount}
     * attribute's value can be found in the {@link #GridLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.android.permissionrequest.test:rowCount
     */
    public static final int GridLayout_rowCount=4;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#rowOrderPreserved}
     * attribute's value can be found in the {@link #GridLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.permissionrequest.test:rowOrderPreserved
     */
    public static final int GridLayout_rowOrderPreserved=5;
    /**
     * <p>This symbol is the offset where the {@link com.example.android.permissionrequest.test.R.attr#useDefaultMargins}
     * attribute's value can be found in the {@link #GridLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.android.permissionrequest.test:useDefaultMargins
     */
    public static final int GridLayout_useDefaultMargins=6;
  }
}